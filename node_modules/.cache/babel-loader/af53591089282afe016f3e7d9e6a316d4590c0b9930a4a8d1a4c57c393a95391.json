{"ast":null,"code":"import _defineProperty from\"/workspaces/react-health/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/workspaces/react-health/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspaces/react-health/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import QuestionList from\"./QuestionList\";import QuestionListLv from\"./QuestionListLV\";import QuestionRenderer from\"./QuestionRenderer\";import{saveAs}from\"file-saver\";import SendEmail from\"./SendEmail\";import StartPage from\"./StartPage\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var initialAnswers={};var initialAnswerText={};var initialComments={};QuestionList.forEach(function(question){initialAnswers[question.identifier]=\"\";initialAnswerText[question.identifier]=\"\";initialComments[question.identifier]=\"\";});var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestionIndex=_useState2[0],setCurrentQuestionIndex=_useState2[1];var _useState3=useState(initialAnswers),_useState4=_slicedToArray(_useState3,2),answers=_useState4[0],setAnswers=_useState4[1];var _useState5=useState(initialAnswerText),_useState6=_slicedToArray(_useState5,2),answerText=_useState6[0],setAnswerText=_useState6[1];var _useState7=useState(initialComments),_useState8=_slicedToArray(_useState7,2),comments=_useState8[0],setComments=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),gender=_useState10[0],setGender=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),selectedOptions=_useState12[0],setSelectedOptions=_useState12[1];var _useState13=useState(50),_useState14=_slicedToArray(_useState13,2),sliderValue=_useState14[0],setSliderValue=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),reachedEnd=_useState16[0],setReachedEnd=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),questionnaireStarted=_useState18[0],setQuestionnaireStarted=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),userName=_useState20[0],setUserName=_useState20[1];var _useState21=useState(\"lat\"),_useState22=_slicedToArray(_useState21,2),language=_useState22[0],setLanguage=_useState22[1];// // Set the language to ENG or LV\nvar handleLanguageChange=function handleLanguageChange(selectedLanguage){setLanguage(selectedLanguage);};// To start the questionnaire\nvar handleStartQuestionnaire=function handleStartQuestionnaire(){if(userName!==\"\"){// When the \"Start questionnaire!\" button is clicked, set the current question index to 0 to start the questionnaire\nsetCurrentQuestionIndex(0);setQuestionnaireStarted(true);}else if(language===\"eng\"){alert(\"Please enter your name!\");}else if(language===\"lat\"){alert(\"Lūdzu ieraksti savu vārdu!\");}};// For slider question management\nvar handleSliderChange=function handleSliderChange(newValue){var identifier=currentQuestion.identifier;setAnswers(function(prevAnswers){return _objectSpread(_objectSpread({},prevAnswers),{},_defineProperty({},identifier,newValue.toString()));});};// For Checkbox question management\nvar handleSelectedOptionsChange=function handleSelectedOptionsChange(updatedOptions){// Extract labels from selected options\nvar selectedLabels=currentQuestion.options.filter(function(option){return updatedOptions.includes(option.value);}).map(function(option){return option.label;});var identifier=currentQuestion.identifier;setAnswers(function(prevAnswers){return _objectSpread(_objectSpread({},prevAnswers),{},_defineProperty({},identifier,selectedLabels.length));});setAnswerText(function(prevAnswerText){return _objectSpread(_objectSpread({},prevAnswerText),{},_defineProperty({},identifier,selectedLabels.join(\", \")));});setSelectedOptions(updatedOptions);};// For time question management\nvar handleTimeChange=function handleTimeChange(selectedTime){var selectedAnswer=selectedTime.format(\"HH:mm\");var identifier=currentQuestion.identifier;setAnswers(function(prevAnswers){return _objectSpread(_objectSpread({},prevAnswers),{},_defineProperty({},identifier,selectedAnswer));});setAnswerText(function(prevAnswerText){return _objectSpread(_objectSpread({},prevAnswerText),{},_defineProperty({},identifier,selectedAnswer));});};// For normal question management\nvar handleAnswerChange=function handleAnswerChange(event,selectedAnswer){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setAnswers(function(prevAnswers){return _objectSpread(_objectSpread({},prevAnswers),{},_defineProperty({},name,value));});setAnswerText(function(prevAnswerText){return _objectSpread(_objectSpread({},prevAnswerText),{},_defineProperty({},name,selectedAnswer));});if(currentQuestion.identifier===\"q52\"){setGender(value);}};//For comment change management\nvar handleCommentChange=function handleCommentChange(event){var _event$target2=event.target,name=_event$target2.name,value=_event$target2.value;setComments(function(prevComments){return _objectSpread(_objectSpread({},prevComments),{},_defineProperty({},name,value));});};var handleNextQuestion=function handleNextQuestion(){// Skip question 1 to question 7\nif(currentQuestionIndex===0&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(6);}// Skip question 4 to question 7\nelse if(currentQuestionIndex===3&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(6);}// Skip question 12 to question 18\nelse if(currentQuestionIndex===11&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(17);}// Skip question 15 to question 18\nelse if(currentQuestionIndex===14&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(17);}// Skip question 19 to question 23\nelse if(currentQuestionIndex===18&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(22);}// Skip question 27 to question 30\nelse if(currentQuestionIndex===26&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(29);}// Skip question 41 to question 48\nelse if(currentQuestionIndex===40&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(47);}// Skip question 43 to question 45\nelse if(currentQuestionIndex===42&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(44);}// Skip question 45 to question 48\nelse if(currentQuestionIndex===44&&(answerText[currentQuestion.identifier]===\"No\"||answerText[currentQuestion.identifier]===\"Nē\")){setCurrentQuestionIndex(47);}// Handle errors\nelse if(answers[currentQuestion.identifier]===\"\"){if(language===\"eng\"){alert(\"Please answer the current question before proceeding.\");return;// Do not proceed if the question is not answered\n}else{alert(\"Lūdzu atbildi uz jautājumu pirms turpini aptauju.\");return;// Do not proceed if the question is not answered\n}}// Continue as normal if no skipping conditions met\nelse if(currentQuestionIndex===QuestionList.length-1){setReachedEnd(true);exportAllDataToCSV();// Export at the end of the quiz\n}else{setCurrentQuestionIndex(function(prevIndex){var nextIndex=prevIndex+1;return nextIndex;});}};// Based on language, determine the right question list to use.\nvar currentQuestion;if(language===\"lat\"){currentQuestion=QuestionListLv[currentQuestionIndex];}else{currentQuestion=QuestionList[currentQuestionIndex];};// Prepare data to be exported as csv\nfunction exportToCSV(data,filename){var csv=\"\\uFEFF\"+// BOM (Byte Order Mark) to indicate UTF-8 encoding (for retaining Latvian characters)\nObject.keys(data[0]).join(\";\")+\"\\n\"+data.map(function(item){return Object.values(item).join(\";\");}).join(\"\\n\");var blob=new Blob([csv],{type:\"text/csv;charset=utf-8\"});saveAs(blob,filename);}var aggregatedData=QuestionList.map(function(question,index){return{QuestionIndex:question.text,AnswerText:answerText[question.identifier]||\"\",Comment:comments[question.identifier]||\"\",AnswerScore:answers[question.identifier]||\"\"};});var exportAllDataToCSV=function exportAllDataToCSV(){var fileName=\"\".concat(userName.split(\" \")[0],\"_data.csv\");// Use the first name for the file name\nexportToCSV(aggregatedData,fileName);};// Get user name\nvar handleUserName=function handleUserName(event){var newName=event.target.value;setUserName(newName);};return/*#__PURE__*/_jsx(\"div\",{children:reachedEnd?/*#__PURE__*/_jsx(SendEmail,{onClick:exportAllDataToCSV,selectedLanguage:language}):questionnaireStarted?currentQuestion&&/*#__PURE__*/_jsx(QuestionRenderer,{question:currentQuestion,answer:answers[currentQuestion.identifier]||\"\"//answer score\n,answerText:answerText[currentQuestion.identifier]||\"\"// answer text\n,onAnswerChange:handleAnswerChange,comment:comments[currentQuestion.identifier]||\"\",onCommentChange:handleCommentChange,onTimeChange:handleTimeChange,gender:gender,onQuestionChange:handleNextQuestion,selectedOptions:selectedOptions,onSelectedOptionsChange:handleSelectedOptionsChange,sliderValue:sliderValue,onSliderChange:handleSliderChange,selectedLanguage:language}):/*#__PURE__*/_jsx(StartPage,{userName:userName,onNameChange:handleUserName,onClick:handleStartQuestionnaire,onSelectLanguage:handleLanguageChange,selectedLanguage:language})});}export default App;","map":{"version":3,"names":["React","useState","QuestionList","QuestionListLv","QuestionRenderer","saveAs","SendEmail","StartPage","jsx","_jsx","App","initialAnswers","initialAnswerText","initialComments","forEach","question","identifier","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","answers","setAnswers","_useState5","_useState6","answerText","setAnswerText","_useState7","_useState8","comments","setComments","_useState9","_useState10","gender","setGender","_useState11","_useState12","selectedOptions","setSelectedOptions","_useState13","_useState14","sliderValue","setSliderValue","_useState15","_useState16","reachedEnd","setReachedEnd","_useState17","_useState18","questionnaireStarted","setQuestionnaireStarted","_useState19","_useState20","userName","setUserName","_useState21","_useState22","language","setLanguage","handleLanguageChange","selectedLanguage","handleStartQuestionnaire","alert","handleSliderChange","newValue","currentQuestion","prevAnswers","_objectSpread","_defineProperty","toString","handleSelectedOptionsChange","updatedOptions","selectedLabels","options","filter","option","includes","value","map","label","length","prevAnswerText","join","handleTimeChange","selectedTime","selectedAnswer","format","handleAnswerChange","event","_event$target","target","name","handleCommentChange","_event$target2","prevComments","handleNextQuestion","exportAllDataToCSV","prevIndex","nextIndex","exportToCSV","data","filename","csv","Object","keys","item","values","blob","Blob","type","aggregatedData","index","QuestionIndex","text","AnswerText","Comment","AnswerScore","fileName","concat","split","handleUserName","newName","children","onClick","answer","onAnswerChange","comment","onCommentChange","onTimeChange","onQuestionChange","onSelectedOptionsChange","onSliderChange","onNameChange","onSelectLanguage"],"sources":["/workspaces/react-health/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport QuestionList from \"./QuestionList\";\nimport QuestionListLv from \"./QuestionListLV\"\nimport QuestionRenderer from \"./QuestionRenderer\";\nimport { saveAs } from \"file-saver\";\nimport SendEmail from \"./SendEmail\";\nimport StartPage from \"./StartPage\";\n\nfunction App() {\n  const initialAnswers = {};\n  const initialAnswerText = {};\n  const initialComments = {};\n\n  QuestionList.forEach((question) => {\n    initialAnswers[question.identifier] = \"\";\n    initialAnswerText[question.identifier] = \"\";\n    initialComments[question.identifier] = \"\";\n  });\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState(initialAnswers);\n  const [answerText, setAnswerText] = useState(initialAnswerText);\n  const [comments, setComments] = useState(initialComments);\n  const [gender, setGender] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [sliderValue, setSliderValue] = useState(50);\n  const [reachedEnd, setReachedEnd] = useState(false);\n  const [questionnaireStarted, setQuestionnaireStarted] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [language, setLanguage] = useState(\"lat\");\n\n  // // Set the language to ENG or LV\n  const handleLanguageChange = (selectedLanguage) => {\n    setLanguage(selectedLanguage);\n  };\n\n  // To start the questionnaire\n  const handleStartQuestionnaire = () => {\n    if (userName !== \"\") {\n      // When the \"Start questionnaire!\" button is clicked, set the current question index to 0 to start the questionnaire\n      setCurrentQuestionIndex(0);\n      setQuestionnaireStarted(true);\n    } else if (language === \"eng\") {\n      alert(\"Please enter your name!\");\n    } else if (language === \"lat\") {\n      alert(\"Lūdzu ieraksti savu vārdu!\");\n    }\n  };\n\n  // For slider question management\n  const handleSliderChange = (newValue) => {\n    const identifier = currentQuestion.identifier;\n\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [identifier]: newValue.toString()\n    }));\n  };\n\n  // For Checkbox question management\n  const handleSelectedOptionsChange = (updatedOptions) => {\n    // Extract labels from selected options\n    const selectedLabels = currentQuestion.options\n      .filter((option) => updatedOptions.includes(option.value))\n      .map((option) => option.label);\n\n    const identifier = currentQuestion.identifier;\n\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [identifier]: selectedLabels.length\n    }));\n\n    setAnswerText((prevAnswerText) => ({\n      ...prevAnswerText,\n      [identifier]: selectedLabels.join(\", \") // Join selected labels\n    }));\n\n    setSelectedOptions(updatedOptions);\n  };\n\n  // For time question management\n  const handleTimeChange = (selectedTime) => {\n    const selectedAnswer = selectedTime.format(\"HH:mm\");\n    const identifier = currentQuestion.identifier;\n\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [identifier]: selectedAnswer\n    }));\n\n    setAnswerText((prevAnswerText) => ({\n      ...prevAnswerText,\n      [identifier]: selectedAnswer\n    }));\n  };\n\n  // For normal question management\n  const handleAnswerChange = (event, selectedAnswer) => {\n    const { name, value } = event.target;\n\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [name]: value\n    }));\n\n    setAnswerText((prevAnswerText) => ({\n      ...prevAnswerText,\n      [name]: selectedAnswer\n    }));\n\n    if (currentQuestion.identifier === \"q52\") {\n      setGender(value);\n    }\n  };\n\n  //For comment change management\n  const handleCommentChange = (event) => {\n    const { name, value } = event.target;\n    setComments((prevComments) => ({\n      ...prevComments,\n      [name]: value\n    }));\n  };\n\n  const handleNextQuestion = () => {\n    // Skip question 1 to question 7\n    if (\n      currentQuestionIndex === 0 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(6);\n    }\n    // Skip question 4 to question 7\n    else if (\n      currentQuestionIndex === 3 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(6);\n    }\n    // Skip question 12 to question 18\n    else if (\n      currentQuestionIndex === 11 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(17);\n    }\n    // Skip question 15 to question 18\n    else if (\n      currentQuestionIndex === 14 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(17);\n    }\n    // Skip question 19 to question 23\n    else if (\n      currentQuestionIndex === 18 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(22);\n    }\n    // Skip question 27 to question 30\n    else if (\n      currentQuestionIndex === 26 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(29);\n    }\n    // Skip question 41 to question 48\n    else if (\n      currentQuestionIndex === 40 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(47);\n    }\n    // Skip question 43 to question 45\n    else if (\n      currentQuestionIndex === 42 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(44);\n    }\n    // Skip question 45 to question 48\n    else if (\n      currentQuestionIndex === 44 &&\n      (answerText[currentQuestion.identifier] === \"No\" || answerText[currentQuestion.identifier] === \"Nē\")\n    ) {\n      setCurrentQuestionIndex(47);\n    }\n    // Handle errors\n    else if (answers[currentQuestion.identifier] === \"\") {\n      if (language === \"eng\") {\n      alert(\"Please answer the current question before proceeding.\");\n      return; // Do not proceed if the question is not answered\n      }\n      else {\n      alert(\"Lūdzu atbildi uz jautājumu pirms turpini aptauju.\");\n      return; // Do not proceed if the question is not answered\n      }\n    }\n    // Continue as normal if no skipping conditions met\n    else if (currentQuestionIndex === QuestionList.length - 1) {\n      setReachedEnd(true);\n      exportAllDataToCSV(); // Export at the end of the quiz\n    } else {\n      setCurrentQuestionIndex((prevIndex) => {\n        const nextIndex = prevIndex + 1;\n        return nextIndex;\n      });\n    }\n  };\n\n  // Based on language, determine the right question list to use.\n  let currentQuestion;\n  if (language === \"lat\") {\n    currentQuestion = QuestionListLv[currentQuestionIndex];\n  } else {\n    currentQuestion = QuestionList[currentQuestionIndex];\n  };\n\n  // Prepare data to be exported as csv\n  function exportToCSV(data, filename) {\n    const csv =\n      \"\\uFEFF\" + // BOM (Byte Order Mark) to indicate UTF-8 encoding (for retaining Latvian characters)\n      Object.keys(data[0]).join(\";\") +\n      \"\\n\" +\n      data.map((item) => Object.values(item).join(\";\")).join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, filename);\n  }\n\n  const aggregatedData = QuestionList.map((question, index) => ({\n    QuestionIndex: question.text,\n    AnswerText: answerText[question.identifier] || \"\",\n    Comment: comments[question.identifier] || \"\",\n    AnswerScore: answers[question.identifier] || \"\"\n  }));\n\n  const exportAllDataToCSV = () => {\n    const fileName = `${userName.split(\" \")[0]}_data.csv`; // Use the first name for the file name\n    exportToCSV(aggregatedData, fileName);\n  };\n\n  // Get user name\n  const handleUserName = (event) => {\n    const newName = event.target.value;\n    setUserName(newName);\n  };\n\n\n  return (\n    <div>\n      {reachedEnd ? (\n        <SendEmail onClick={exportAllDataToCSV} selectedLanguage={language} />\n      ) : questionnaireStarted ? (\n        currentQuestion && (\n          <QuestionRenderer\n            question={currentQuestion}\n            answer={answers[currentQuestion.identifier] || \"\"} //answer score\n            answerText={answerText[currentQuestion.identifier] || \"\"} // answer text\n            onAnswerChange={handleAnswerChange}\n            comment={comments[currentQuestion.identifier] || \"\"}\n            onCommentChange={handleCommentChange}\n            onTimeChange={handleTimeChange}\n            gender={gender}\n            onQuestionChange={handleNextQuestion}\n            selectedOptions={selectedOptions}\n            onSelectedOptionsChange={handleSelectedOptionsChange}\n            sliderValue={sliderValue}\n            onSliderChange={handleSliderChange}\n            selectedLanguage={language}\n          />\n        )\n      ) : (\n        <StartPage\n          userName={userName}\n          onNameChange={handleUserName}\n          onClick={handleStartQuestionnaire}\n          onSelectLanguage={handleLanguageChange}\n          selectedLanguage={language}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}