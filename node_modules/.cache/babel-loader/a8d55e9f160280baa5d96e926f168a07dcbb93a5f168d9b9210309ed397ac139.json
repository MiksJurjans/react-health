{"ast":null,"code":"import _slicedToArray from\"/workspaces/react-health/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyButton=function MyButton(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isHovered=_useState2[0],setIsHovered=_useState2[1];var buttonStyle={borderRadius:\"50px\",backgroundColor:isHovered?\"grey\":\"white\",color:isHovered?\"white\":\"black\",padding:\"10px 20px\",cursor:\"pointer\",transition:\"background-color 0.3s, color 0.3s\",border:\"1px solid #D9D9D9\",fontFamily:\"Sectra\",fontSize:\"12pt\",height:\"50px\",fontWeight:900};return/*#__PURE__*/_jsx(\"button\",{style:buttonStyle,onClick:props.onClick,onMouseEnter:function onMouseEnter(){return setIsHovered(true);},onMouseLeave:function onMouseLeave(){return setIsHovered(false);},children:props.buttonText});};export default MyButton;","map":{"version":3,"names":["React","useState","jsx","_jsx","MyButton","props","_useState","_useState2","_slicedToArray","isHovered","setIsHovered","buttonStyle","borderRadius","backgroundColor","color","padding","cursor","transition","border","fontFamily","fontSize","height","fontWeight","style","onClick","onMouseEnter","onMouseLeave","children","buttonText"],"sources":["/workspaces/react-health/src/components/Button.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst MyButton = (props) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const buttonStyle = {\n    borderRadius: \"50px\",\n    backgroundColor: isHovered ? \"grey\" : \"white\",\n    color: isHovered ? \"white\" : \"black\",\n    padding: \"10px 20px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.3s, color 0.3s\",\n    border: \"1px solid #D9D9D9\",\n    fontFamily: \"Sectra\",\n    fontSize: \"12pt\",\n    height: \"50px\",\n    fontWeight: 900\n  };\n\n  return (\n    <button\n      style={buttonStyle}\n      onClick={props.onClick}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {props.buttonText}\n    </button>\n  );\n};\n\nexport default MyButton;\n"],"mappings":"kJAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAK,CAC1B,IAAAC,SAAA,CAAkCL,QAAQ,CAAC,KAAK,CAAC,CAAAM,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,WAAW,CAAG,CAClBC,YAAY,CAAE,MAAM,CACpBC,eAAe,CAAEJ,SAAS,CAAG,MAAM,CAAG,OAAO,CAC7CK,KAAK,CAAEL,SAAS,CAAG,OAAO,CAAG,OAAO,CACpCM,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,SAAS,CACjBC,UAAU,CAAE,mCAAmC,CAC/CC,MAAM,CAAE,mBAAmB,CAC3BC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,MAAM,CAChBC,MAAM,CAAE,MAAM,CACdC,UAAU,CAAE,GACd,CAAC,CAED,mBACEnB,IAAA,WACEoB,KAAK,CAAEZ,WAAY,CACnBa,OAAO,CAAEnB,KAAK,CAACmB,OAAQ,CACvBC,YAAY,CAAE,SAAAA,aAAA,QAAM,CAAAf,YAAY,CAAC,IAAI,CAAC,EAAC,CACvCgB,YAAY,CAAE,SAAAA,aAAA,QAAM,CAAAhB,YAAY,CAAC,KAAK,CAAC,EAAC,CAAAiB,QAAA,CAEvCtB,KAAK,CAACuB,UAAU,CACX,CAAC,CAEb,CAAC,CAED,cAAe,CAAAxB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}