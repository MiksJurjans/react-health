import clsx from "clsx";
import { useThemeColorStyles } from "mui-app-theme";
import { useTypographySizeStyles } from "./TypographySizeStyles";
import { useTypographyStyles } from "./TypographyStyles";
export class TypographyClassNameBuilder {
    constructor(className) {
        this.classes = useTypographyStyles();
        this.colorClasses = useThemeColorStyles();
        this.sizeClasses = useTypographySizeStyles();
        this.externalClassName = className;
        this.className = this.classes.root;
    }
    appendColor(disabled, color) {
        if (disabled) {
            this.className = clsx(this.className, this.colorClasses.disabled);
        }
        else {
            this.className = clsx(this.className, this.colorClasses[color]);
        }
        return this;
    }
    appendSize(size) {
        this.className = clsx(this.className, this.sizeClasses[size]);
        return this;
    }
    appendNoWrap(noWrap) {
        if (noWrap) {
            this.className = clsx(this.className, this.classes.noWrap);
        }
        return this;
    }
    appendBold(bold) {
        if (bold) {
            this.className = clsx(this.className, this.classes.noWrap);
        }
        return this;
    }
    build() {
        return clsx(this.className, this.externalClassName);
    }
}
//# sourceMappingURL=TypographyClassNameBuilder.js.map